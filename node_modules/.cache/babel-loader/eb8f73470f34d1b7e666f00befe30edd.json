{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst wait = ms => new Promise(resolve => setTimeout(resolve, ms));\n/**\n * This is a custom hook that can be used to submit a form and simulate an API call\n * It uses Math.random() to simulate a random success or failure, with 50% chance of each\n */\n\n\nconst useSubmit = () => {\n  _s();\n\n  const [isLoading, setLoading] = useState(false);\n  const [response, setResponse] = useState(null);\n\n  const submit = async (url, data) => {\n    const random = Math.random();\n    setLoading(true);\n\n    try {\n      await wait(2000);\n\n      if (random < 0.5) {\n        throw new Error(\"Something went wrong\");\n      }\n\n      setResponse({\n        type: 'success',\n        message: `Thanks for your submission ${data.firstName}, we will get back to you shortly!`\n      });\n    } catch (error) {\n      setResponse({\n        type: 'error',\n        message: 'Something went wrong, please try again later!'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return {\n    isLoading,\n    response,\n    submit\n  };\n};\n\n_s(useSubmit, \"YOVOG/9T4K52uQQxOOHX4PP6REA=\");\n\nexport default useSubmit;","map":{"version":3,"names":["useState","wait","ms","Promise","resolve","setTimeout","useSubmit","isLoading","setLoading","response","setResponse","submit","url","data","random","Math","Error","type","message","firstName","error"],"sources":["/Users/ryes/Downloads/AdvReactProj/src/hooks/useSubmit.js"],"sourcesContent":["import {useState} from \"react\";\n\nconst wait = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n/**\n * This is a custom hook that can be used to submit a form and simulate an API call\n * It uses Math.random() to simulate a random success or failure, with 50% chance of each\n */\nconst useSubmit = () => {\n  const [isLoading, setLoading] = useState(false);\n  const [response, setResponse] = useState(null);\n\n  const submit = async (url, data) => {\n    const random = Math.random();\n    setLoading(true);\n    try {\n      await wait(2000);\n      if (random < 0.5) {\n        throw new Error(\"Something went wrong\");\n      }\n      setResponse({\n        type: 'success',\n        message: `Thanks for your submission ${data.firstName}, we will get back to you shortly!`,\n      })\n    } catch (error) {\n      setResponse({\n        type: 'error',\n        message: 'Something went wrong, please try again later!',\n      })\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return { isLoading, response, submit };\n}\n\nexport default useSubmit;\n"],"mappings":";;AAAA,SAAQA,QAAR,QAAuB,OAAvB;;AAEA,MAAMC,IAAI,GAAIC,EAAD,IAAQ,IAAIC,OAAJ,CAAaC,OAAD,IAAaC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAnC,CAArB;AAEA;AACA;AACA;AACA;;;AACA,MAAMI,SAAS,GAAG,MAAM;EAAA;;EACtB,MAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;EACA,MAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,IAAD,CAAxC;;EAEA,MAAMW,MAAM,GAAG,OAAOC,GAAP,EAAYC,IAAZ,KAAqB;IAClC,MAAMC,MAAM,GAAGC,IAAI,CAACD,MAAL,EAAf;IACAN,UAAU,CAAC,IAAD,CAAV;;IACA,IAAI;MACF,MAAMP,IAAI,CAAC,IAAD,CAAV;;MACA,IAAIa,MAAM,GAAG,GAAb,EAAkB;QAChB,MAAM,IAAIE,KAAJ,CAAU,sBAAV,CAAN;MACD;;MACDN,WAAW,CAAC;QACVO,IAAI,EAAE,SADI;QAEVC,OAAO,EAAG,8BAA6BL,IAAI,CAACM,SAAU;MAF5C,CAAD,CAAX;IAID,CATD,CASE,OAAOC,KAAP,EAAc;MACdV,WAAW,CAAC;QACVO,IAAI,EAAE,OADI;QAEVC,OAAO,EAAE;MAFC,CAAD,CAAX;IAID,CAdD,SAcU;MACRV,UAAU,CAAC,KAAD,CAAV;IACD;EACF,CApBD;;EAsBA,OAAO;IAAED,SAAF;IAAaE,QAAb;IAAuBE;EAAvB,CAAP;AACD,CA3BD;;GAAML,S;;AA6BN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}