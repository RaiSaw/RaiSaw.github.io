{"ast":null,"code":"// src/index.ts\nimport { createContext as createReactContext, useContext as useReactContext } from \"react\";\nfunction getErrorMessage(hook, provider) {\n  return \"\".concat(hook, \" returned `undefined`. Seems you forgot to wrap component within \").concat(provider);\n}\nfunction createContext() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var name = options.name,\n    _options$strict = options.strict,\n    strict = _options$strict === void 0 ? true : _options$strict,\n    _options$hookName = options.hookName,\n    hookName = _options$hookName === void 0 ? \"useContext\" : _options$hookName,\n    _options$providerName = options.providerName,\n    providerName = _options$providerName === void 0 ? \"Provider\" : _options$providerName,\n    errorMessage = options.errorMessage;\n  var Context = createReactContext(void 0);\n  Context.displayName = name;\n  function useContext() {\n    var _a;\n    var context = useReactContext(Context);\n    if (!context && strict) {\n      var error = new Error(errorMessage !== null && errorMessage !== void 0 ? errorMessage : getErrorMessage(hookName, providerName));\n      error.name = \"ContextError\";\n      (_a = Error.captureStackTrace) == null ? void 0 : _a.call(Error, error, useContext);\n      throw error;\n    }\n    return context;\n  }\n  return [Context.Provider, useContext, Context];\n}\nexport { createContext };","map":{"version":3,"names":["createContext","createReactContext","useContext","useReactContext","getErrorMessage","hook","provider","options","name","strict","hookName","providerName","errorMessage","Context","displayName","_a","context","error","Error","captureStackTrace","call","Provider"],"sources":["/Users/ryes/Downloads/Files etc/React WS/node_modules/@chakra-ui/react-context/dist/index.esm.js"],"sourcesContent":["// src/index.ts\nimport {\n  createContext as createReactContext,\n  useContext as useReactContext\n} from \"react\";\nfunction getErrorMessage(hook, provider) {\n  return `${hook} returned \\`undefined\\`. Seems you forgot to wrap component within ${provider}`;\n}\nfunction createContext(options = {}) {\n  const {\n    name,\n    strict = true,\n    hookName = \"useContext\",\n    providerName = \"Provider\",\n    errorMessage\n  } = options;\n  const Context = createReactContext(void 0);\n  Context.displayName = name;\n  function useContext() {\n    var _a;\n    const context = useReactContext(Context);\n    if (!context && strict) {\n      const error = new Error(errorMessage ?? getErrorMessage(hookName, providerName));\n      error.name = \"ContextError\";\n      (_a = Error.captureStackTrace) == null ? void 0 : _a.call(Error, error, useContext);\n      throw error;\n    }\n    return context;\n  }\n  return [Context.Provider, useContext, Context];\n}\nexport {\n  createContext\n};\n"],"mappings":"AAAA;AACA,SACEA,aAAa,IAAIC,kBAAkB,EACnCC,UAAU,IAAIC,eAAe,QACxB,OAAO;AACd,SAASC,eAAe,CAACC,IAAI,EAAEC,QAAQ,EAAE;EACvC,iBAAUD,IAAI,8EAAsEC,QAAQ;AAC9F;AACA,SAASN,aAAa,GAAe;EAAA,IAAdO,OAAO,uEAAG,CAAC,CAAC;EACjC,IACEC,IAAI,GAKFD,OAAO,CALTC,IAAI;IAAA,kBAKFD,OAAO,CAJTE,MAAM;IAANA,MAAM,gCAAG,IAAI;IAAA,oBAIXF,OAAO,CAHTG,QAAQ;IAARA,QAAQ,kCAAG,YAAY;IAAA,wBAGrBH,OAAO,CAFTI,YAAY;IAAZA,YAAY,sCAAG,UAAU;IACzBC,YAAY,GACVL,OAAO,CADTK,YAAY;EAEd,IAAMC,OAAO,GAAGZ,kBAAkB,CAAC,KAAK,CAAC,CAAC;EAC1CY,OAAO,CAACC,WAAW,GAAGN,IAAI;EAC1B,SAASN,UAAU,GAAG;IACpB,IAAIa,EAAE;IACN,IAAMC,OAAO,GAAGb,eAAe,CAACU,OAAO,CAAC;IACxC,IAAI,CAACG,OAAO,IAAIP,MAAM,EAAE;MACtB,IAAMQ,KAAK,GAAG,IAAIC,KAAK,CAACN,YAAY,aAAZA,YAAY,cAAZA,YAAY,GAAIR,eAAe,CAACM,QAAQ,EAAEC,YAAY,CAAC,CAAC;MAChFM,KAAK,CAACT,IAAI,GAAG,cAAc;MAC3B,CAACO,EAAE,GAAGG,KAAK,CAACC,iBAAiB,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGJ,EAAE,CAACK,IAAI,CAACF,KAAK,EAAED,KAAK,EAAEf,UAAU,CAAC;MACnF,MAAMe,KAAK;IACb;IACA,OAAOD,OAAO;EAChB;EACA,OAAO,CAACH,OAAO,CAACQ,QAAQ,EAAEnB,UAAU,EAAEW,OAAO,CAAC;AAChD;AACA,SACEb,aAAa"},"metadata":{},"sourceType":"module"}